#include <dht.h>

dht envSensor;

// Определение пинов
#define DHT_PIN         8
#define LIGHT_SENSOR    A0
#define SOIL_SENSOR     A1

// Определение выходов
#define LED_GROW        6
#define WATER_PUMP      5 
#define HEATER          3 
#define FAN             7

// Таймеры для защиты системы
#define PUMP_SAFETIME   20000
#define HEATER_SAFETIME 60000
#define FAN_SAFETIME    120000

// Нормальные параметры
#define NORM_HUMIDITY   55
#define NORM_TEMP       25
#define NORM_SOIL       400
#define NORM_LIGHT      500

// Пороги срабатывания
#define SOIL_DRY_THRESHOLD  300

// Гистерезис
#define TEMP_ON_THRESHOLD       23  // Включить нагреватель, если <23°C
#define TEMP_OFF_THRESHOLD      26  // Выключить, если >26°C
#define HUMID_ON_THRESHOLD      60  
#define HUMID_OFF_THRESHOLD     45 
#define LIGHT_DARK_THRESHOLD    300  
#define LIGHT_BRIGHT_THRESHOLD  700  

struct {
  // Данные с датчиков
  int temp;
  int humidity;
  int soil;
  int light;
  
  // Статусы устройств
  bool is_Light_On;
  bool is_Pump_On;
  bool is_Heating;
  bool is_Fan_On;
  
  // Таймеры (моменты последнего включения)
  uint32_t lightTimer;
  uint32_t pumpTimer;
  uint32_t heatTimer;
  uint32_t fanTimer;
} greenhouse;

void setup() {
  Serial.begin(115200);
  
  // Назначение пинов как выходов
  pinMode(LED_GROW, OUTPUT);
  pinMode(WATER_PUMP, OUTPUT);
  pinMode(HEATER, OUTPUT);
  pinMode(FAN, OUTPUT);
  
  // Гарантированное выключение всех устройств при старте
  digitalWrite(LED_GROW, LOW);
  digitalWrite(WATER_PUMP, HIGH); // Pump off (active low)
  digitalWrite(HEATER, LOW);
  digitalWrite(FAN, LOW);
}


void readSensors() {
  envSensor.read11(DHT_PIN);
  greenhouse.temp = envSensor.temperature;
  greenhouse.humidity = envSensor.humidity;
  greenhouse.light = analogRead(LIGHT_SENSOR);
  greenhouse.soil = analogRead(SOIL_SENSOR);
}


void controlLight() {
  if (greenhouse.light < LIGHT_DARK_THRESHOLD && !greenhouse.is_Light_On) {
    digitalWrite(LED_GROW, HIGH);
    greenhouse.is_Light_On = true;
    greenhouse.lightTimer = millis();
  } 
  else if (greenhouse.light > LIGHT_BRIGHT_THRESHOLD && greenhouse.is_Light_On) {
    digitalWrite(LED_GROW, LOW);
    greenhouse.is_Light_On = false;
  }
}


void controlWater() {
  if (greenhouse.soil < SOIL_DRY_THRESHOLD && !greenhouse.is_Pump_On) {
    digitalWrite(WATER_PUMP, LOW);
    greenhouse.is_Pump_On = true;
    greenhouse.pumpTimer = millis();
  }
  else if ((greenhouse.soil > NORM_SOIL || 
           (millis() - greenhouse.pumpTimer > PUMP_SAFETIME)) && 
           greenhouse.is_Pump_On) {
    digitalWrite(WATER_PUMP, HIGH);
    greenhouse.is_Pump_On = false;
  }
}


void controlTemperature() {
  if (greenhouse.temp < TEMP_ON_THRESHOLD && !greenhouse.is_Heating) {
    digitalWrite(HEATER, HIGH);
    greenhouse.is_Heating = true;
    greenhouse.heatTimer = millis(); // Добавить таймер
  }
  else if ((greenhouse.temp > TEMP_OFF_THRESHOLD || 
           (millis() - greenhouse.heatTimer > HEATER_SAFETIME * 1000)) && 
           greenhouse.is_Heating) {
    digitalWrite(HEATER, LOW);
    greenhouse.is_Heating = false;
  }
}


void controlVentilation() {
  if (greenhouse.humidity > HUMID_ON_THRESHOLD && !greenhouse.is_Fan_On) {
    digitalWrite(FAN, HIGH);
    greenhouse.is_Fan_On = true;
    greenhouse.fanTimer = millis();
  }
  else if ((greenhouse.humidity < HUMID_OFF_THRESHOLD || 
           (millis() - greenhouse.fanTimer > FAN_SAVETIME)) && 
           greenhouse.is_Fan_On) {
    digitalWrite(FAN, LOW);
    greenhouse.is_Fan_On = false;
  }
}

void logData() {
  Serial.print("Humidity: "); Serial.print(greenhouse.humidity); Serial.print("% ");
  Serial.print("Temp: "); Serial.print(greenhouse.temp); Serial.print("C ");
  Serial.print("Light: "); Serial.print(greenhouse.light); Serial.print(" ");
  Serial.print("Soil: "); Serial.print(greenhouse.soil); Serial.print(" ");
  Serial.print("Status: ");
  Serial.print(greenhouse.is_Light_On ? "LIGHT_ON " : "LIGHT_OFF ");
  Serial.print(greenhouse.is_Pump_On ? "PUMP_ON " : "PUMP_OFF ");
  Serial.print(greenhouse.is_Heating ? "HEATER_ON " : "HEATER_OFF ");
  Serial.println(greenhouse.is_Fan_On ? "FAN_ON" : "FAN_OFF");
}

void loop() {
  readSensors();
  
  controlLight();
  controlWater();
  controlTemperature();
  controlVentilation();
  
  logData();
  
  delay(100);
}
